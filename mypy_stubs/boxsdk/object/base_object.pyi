# from ..util.api_call_decorator import api_call as api_call
from .base_api_json_object import BaseAPIJSONObject as BaseAPIJSONObject
from .base_endpoint import BaseEndpoint as BaseEndpoint
from _typeshed import Incomplete

class BaseObject(BaseEndpoint, BaseAPIJSONObject):
    def __init__(
        self, session, object_id, response_object: Incomplete | None = None
    ) -> None: ...
    def get_url(self, *args): ...
    def get_type_url(self): ...
    @property
    def object_id(self): ...
    def get(
        self, fields: Incomplete | None = None, headers: Incomplete | None = None
    ): ...
    def update_info(
        self,
        data,
        params: Incomplete | None = None,
        headers: Incomplete | None = None,
        **kwargs
    ): ...
    def delete(
        self, params: Incomplete | None = None, headers: Incomplete | None = None
    ): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __hash__(self): ...
    def clone(self, session: Incomplete | None = None): ...
